# -*- coding: utf-8 -*-
"""Model_ml_diabetes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1l5hbcQn-AohJRTyIO3Gm9bygKTyee2Zm
"""

# Importando as bibliotecas necessárias
import numpy as np
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Carregando os dados
diabetes_data = pd.read_csv('/content/diabetes.csv')

# Dividindo os dados em recursos (X) e rótulos (y)
X = diabetes_data.drop('Outcome', axis=1)
y = diabetes_data['Outcome']

# Dividindo os dados em conjuntos de treinamento e teste
X_train, X_test, y_train, y_test = train_test_split(X,
                                                    y,
                                                    test_size=0.2,
                                                    random_state=42)

# Inicializando o classificador Random Forest
random_forest = RandomForestClassifier(n_estimators=100)

# Treinando o modelo
random_forest.fit(X_train, y_train)

# Fazendo previsões nos dados de teste
y_pred = random_forest.predict(X_test)
y_pred

from sklearn.metrics import confusion_matrix

cm = confusion_matrix(y_pred, y_test)
cm

# Avaliando a precisão do modelo
accuracy = accuracy_score(y_test, y_pred)
print("Acurácia do modelo: {:.2f}%".format(accuracy * 100))

# Fazendo previsões nos dados de teste
y_pred = random_forest.predict(X_test)

# Exibindo as previsões
for i in range(len(y_pred)):
    print("Previsão: {}, Valor Real: {}".format(y_pred[i], y_test.iloc[i]))

import pickle

# Salvando o modelo em um arquivo
with open('modelo_treinado.pkl', 'wb') as file:
    pickle.dump(random_forest, file)

